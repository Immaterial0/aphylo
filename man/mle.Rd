% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.r, R/mle.r
\name{phylo_mcmc}
\alias{phylo_mcmc}
\alias{mle}
\alias{phylo_mle}
\alias{print.phylo_mle}
\alias{coef.phylo_mle}
\alias{vcov.phylo_mle}
\alias{plot.phylo_mle}
\title{Maximum Likelihood Estimation of the Phylogenetic Tree}
\usage{
phylo_mcmc(params, dat, priors = NULL, fix.params = c(psi0 = FALSE, psi1 =
  FALSE, mu0 = FALSE, mu1 = FALSE, Pi = FALSE), control = list())

phylo_mle(params, dat, useABC = FALSE, priors = NULL, control = list(),
  fix.params = c(psi0 = FALSE, psi1 = FALSE, mu0 = FALSE, mu1 = FALSE, Pi =
  FALSE))

\method{print}{phylo_mle}(x, ...)

\method{coef}{phylo_mle}(object, ...)

\method{vcov}{phylo_mle}(object, ...)

\method{plot}{phylo_mle}(x, y = NULL, main = "", xlab = "Step",
  ylab = "Log-Likelihood", type = "l", addlegend = TRUE, ...)
}
\arguments{
\item{params}{A vector of length 5 with initial parameters. In particular
\code{psi[1]}, \code{psi[2]}, \code{mu[1]}, \code{mu[2]}, and \code{Pi}.}

\item{dat}{An object of class \code{phylo_offspring} as returned by
\code{\link{get_offspring}}.}

\item{priors}{A list of length 3 with functions named \code{psi}, \code{mu},
\code{Pi}}

\item{fix.params}{A Logical vector of length 5. Whether or not to fix
a particular parameter to that of what was specified in \code{params}.}

\item{control}{A list with parameters for the optimization method (see
details).}

\item{useABC}{Logical scalar. When \code{TRUE}, uses Artificial Bee Colony
optimization algorithm instead.}

\item{x}{An object of class \code{phylo_mle}.}

\item{...}{Further arguments passed to plot}

\item{y}{Ignored.}

\item{main}{Passed to plot.}

\item{xlab}{Passed to plot.}

\item{ylab}{Passed to plot.}

\item{type}{Passed to plot.}

\item{addlegend}{Logical scalar. When \code{TRUE} adds extra info to the
plot as a legend including ll at the optimum and parameter values.}
}
\value{
A list of class \code{phylo_mle} with the following elements:
\item{par}{A numeric vector of length 5 with the solution.}
\item{hist}{A numeric matrix of size \code{counts*5} with the solution path.}
\item{value}{A numeric scalar with the value of \code{fun(par)}}
\item{ll}{A numeric scalar with the value of \code{-fun(par)}}
\item{fun}{A function (the objective function).}
\item{priors}{If specified, the function \code{priors} passed to the method.}
\item{dat}{The data \code{dat} provided to the function.}
\item{par0}{A numeric vector of length 5 with the initial parameters.}
\item{fix.params}{Logical vector of length 5, as passed to the method.}
\item{method}{Character scalar with the name of the method used.}
\item{varcovar}{A matrix of size 5*5. The estimated covariance matrix.}
}
\description{
The optimization is done either via \code{abc_cpp} or Newton-Raphson.
}
\details{
When \code{useABC = TRUE}, the optimization is done via 
\bold{Artificial Bee Colony method}. The default \code{control} parameters, which
are passed to \code{\link[ABCoptim:abc_cpp]{abc_cpp}} in the \pkg{ABCoptim} package,
are the following:

\tabular{ll}{
\code{criter} \tab Integer scalar. Default \code{50L}. \cr
\code{maxCycle} \tab Integer scalar. Default \code{500L}. \cr
\code{lb} \tab Numeric scalar. Default \code{1e-20}. \cr
\code{ub} \tab Numeric scalar. Default \code{1 - 1e-20}.
}

The default \code{control} parameters for \bold{Newton-Raphson method} are
the following:

\tabular{ll}{
\code{maxiter} \tab Integer scalar. Maximum number of steps in the Newton-Raphson
algorithm. Default \code{100L}.\cr
\code{criter} \tab Numeric scalar. Stoping criteria for the Newton-Raphson
algorithm. Default \code{1e-15}.\cr
\code{method.args} \tab A list of arguments passed to
\code{\link[numDeriv:jacobian]{hessian,jacobian}} from the \CRANpkg{numDeriv}
package. Default \code{list(d = .0001)}\cr
\code{solve.tol} \tab Numeric scalar passed to \code{\link{solve}}. Default
\code{1e-40}.
}

Notice that the algorithm is somewhat numerically unstable when using starting points
with values higher than \code{0.4}. It is recomended to use values closer to
\code{0.1} instead.

\code{phylo_mcmc} is a wrapper of \code{\link{MCMC}}, so, instead of treating the
problem as a maximization problem, \code{phylo_mcmc} generates a \bold{Markov Chain}.
The default values of \code{control} are:

\tabular{ll}{
\code{nbatch} \tab Integer scalar. Number of mcmc steps. Default \code{2e3}. \cr
\code{scale} \tab Numeric scalar. Default \code{0.01}. \cr
\code{lb} \tab Numeric vector. Default \code{rep(1e-20, 5)}. \cr
\code{ub} \tab Numeric vector. Default \code{rep(1 - 1e-20, 5)}. \cr
}
}
\examples{

# Using simulated data ------------------------------------------------------
set.seed(890)
dat <- sim_annotated_tree(250, P=2)


# Computing Estimating the parameters 
# for some reason, starting with parameters equal to .5 breaks NR.
ans_nr  <- phylo_mle(rep(.1,5), dat)
ans_abc <- phylo_mle(rep(.1,5), dat, useABC = TRUE)

# Plotting the path
with(ans_nr, plot(
 - apply(hist, 1, fun),
 type = "l",
 xlab = "Step",
 ylab = "Log-Likelihood"
))


# Computing Estimating the parameters Using Priors for PSI 
mypriors <- function(params) {
    dbeta(params[1:2], 2, 10)
}
ans_nr_dbeta <- phylo_mle(rep(.1,5), dat, priors = mypriors)
ans_abc_dbeta <- phylo_mle(rep(.1,5), dat, priors = mypriors, useABC = TRUE)

# Plotting the path
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(2, 2))

plot(ans_nr, main = "No priors NR")
plot(ans_abc, main = "No priors ABC")
plot(ans_nr_dbeta, main = "NR w/ Prior for Psi ~ beta(2,10)")
plot(ans_abc_dbeta, main = "ABC w/ Prior for Psi ~ beta(2,10)")

par(oldpar)


# Using the MCMC ------------------------------------------------------------

\dontrun{

set.seed(1233)
# Simulating a tree
tree <- sim_tree(200)

# Simulating functions
dat <- sim_annotated_tree(
  tree = tree,
  psi  = c(.01, .03),
  mu   = c(.05, .02),
  Pi   = .5
)

# Running the MCMC
set.seed(1231)

ans_mcmc <- phylo_mcmc(
  rep(.5, 5), dat,
  control = list(nbatch = 2e5, burnin=1000, thin=200, scale=2e-2)
)
}

}
