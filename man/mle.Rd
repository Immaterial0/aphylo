% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mle.r, R/predict.r
\name{mle}
\alias{mle}
\alias{phylo_mle}
\alias{print.phylo_mle}
\alias{coef.phylo_mle}
\alias{vcov.phylo_mle}
\alias{plot.phylo_mle}
\alias{phylo_mcmc}
\alias{predict.phylo_mle}
\alias{prediction_score}
\alias{print.aphylo_prediction_score}
\title{Maximum Likelihood Estimation of the Phylogenetic Tree}
\usage{
phylo_mle(dat, method = "L-BFGS-B", priors = NULL, control = list(),
  params = rep(0.05, 5), lower = 0, upper = 1, fix.params = c(psi0 =
  FALSE, psi1 = FALSE, mu0 = FALSE, mu1 = FALSE, Pi = FALSE))

\method{print}{phylo_mle}(x, ...)

\method{coef}{phylo_mle}(object, ...)

\method{vcov}{phylo_mle}(object, ...)

\method{plot}{phylo_mle}(x, y = NULL, main = "", xlab = "Step",
  ylab = "Log-Likelihood", type = ifelse(x$method \%in\% c("mcmc", "ABC"),
  "l", "p"), addlegend = TRUE, ...)

phylo_mcmc(params, dat, priors = NULL, fix.params = c(psi0 = FALSE, psi1 =
  FALSE, mu0 = FALSE, mu1 = FALSE, Pi = FALSE), control = list())

\method{predict}{phylo_mle}(object, what = c("missings", "all"), ...)

prediction_score(x, expected = NULL, alpha = 0.5, ...)

\method{print}{aphylo_prediction_score}(x, ...)
}
\arguments{
\item{dat}{An object of class \code{new_aphylo} as returned by
\code{\link{new_aphylo}}.}

\item{method}{Character scalar. When \code{"ABC"}, uses Artificial Bee Colony
optimization algorithm, otherwise it uses a method in \code{\link[stats:optim]{optim}}.}

\item{priors}{A list of length 3 with functions named \code{psi}, \code{mu},
\code{Pi}}

\item{control}{A list with parameters for the optimization method (see
details).}

\item{params}{A vector of length 5 with initial parameters. In particular
\code{psi[1]}, \code{psi[2]}, \code{mu[1]}, \code{mu[2]}, and \code{Pi}.}

\item{lower}{Numeric vector of length 5. Lower bounds, default to 0.0001.}

\item{upper}{Numeric vector of length 5. Upper bounds, default to 0.9999}

\item{fix.params}{A Logical vector of length 5. Whether or not to fix
a particular parameter to that of what was specified in \code{params}.}

\item{x}{An object of class \code{phylo_mle}.}

\item{...}{Further arguments passed to the method.}

\item{object}{An object of class \code{phylo_mle}.}

\item{y}{Ignored.}

\item{main}{Passed to plot.}

\item{xlab}{Passed to plot.}

\item{ylab}{Passed to plot.}

\item{type}{Passed to plot.}

\item{addlegend}{Logical scalar. When \code{TRUE} adds extra info to the
plot as a legend including ll at the optimum and parameter values.}

\item{what}{Either a character scalar or an integer vector. If a character,
then it can be either \code{"missings"}, \code{"leafs"}, or \code{"all"}. If an integer vector,
then these must be values between \eqn{[0, n - 1]} (node ids).}

\item{expected}{Integer vector of length \eqn{n}. Expected values (either 0 or 1).}

\item{alpha}{Numeric scalar. Prior belief of the parameter of the bernoulli distribution
used to compute the random imputation score.}
}
\value{
A list of class \code{phylo_mle} with the following elements:
\item{par}{A numeric vector of length 5 with the solution.}
\item{hist}{A numeric matrix of size \code{counts*5} with the solution path (length 2 if used \code{optim}
as the intermediate steps are not available to the user).}
\item{ll}{A numeric scalar with the value of \code{fun(par, dat)}. The value of the log likelihood.}
\item{counts}{Integer scalar number of steps/batch performed.}
\item{convergence}{Integer scalar. Equal to 0 if \code{optim} converged. See \code{optim}.}
\item{message}{Character scalar. See \code{optim}.}
\item{fun}{A function (the objective function).}
\item{priors}{If specified, the function \code{priors} passed to the method.}
\item{dat}{The data \code{dat} provided to the function.}
\item{par0}{A numeric vector of length 5 with the initial parameters.}
\item{fix.params}{Logical vector of length 5, as passed to the method.}
\item{method}{Character scalar with the name of the method used.}
\item{varcovar}{A matrix of size 5*5. The estimated covariance matrix.}

In the case of \code{phylo_mcmc}, \code{hist} is an object of class
\code{\link[coda:mcmc.list]{mcmc.list}}.

In the case of the \code{predict} method, a two-column numeric matrix
with values between \eqn{[0,1]} (probabilities).
}
\description{
The optimization is done either via \code{abc_cpp} or \code{optim}.
}
\details{
When \code{method="ABC"}, the optimization is done via 
\bold{Artificial Bee Colony method}. The default \code{control} parameters, which
are passed to \code{\link[ABCoptim:abc_cpp]{abc_cpp}} in the \pkg{ABCoptim} package,
are the following:

\tabular{ll}{
\code{criter} \tab Integer scalar. Default \code{50L}. \cr
\code{maxCycle} \tab Integer scalar. Default \code{500L}. \cr
\code{lb} \tab Numeric scalar. Default \code{1e-20}. \cr
\code{ub} \tab Numeric scalar. Default \code{1 - 1e-20}.
}

In the case of \code{method != "ABC"}, the algorithm is somewhat numerically
unstable when using starting points with values higher than \code{0.1}.
It is recomended to use values closer to \code{0.1} instead (as the default).

\code{phylo_mcmc} is a wrapper of \code{\link{MCMC}}, so, instead of treating the
problem as a maximization problem, \code{phylo_mcmc} generates a \bold{Markov Chain}.
The default values of \code{control} are:

\tabular{ll}{
\code{nbatch} \tab Integer scalar. Number of mcmc steps. Default \code{2e3}. \cr
\code{scale} \tab Numeric scalar. Default \code{0.01}. \cr
\code{lb} \tab Numeric vector. Default \code{rep(1e-20, 5)}. \cr
\code{ub} \tab Numeric vector. Default \code{rep(1 - 1e-20, 5)}. \cr
}

In the case of \code{prediction_score}, \code{...} are passed to
\code{predict.phylo_mle}.
}
\examples{

# Using simulated data ------------------------------------------------------
set.seed(890)
dat <- sim_annotated_tree(100, P=2)


# Computing Estimating the parameters 
# for some reason, starting with parameters equal to .5 breaks NR.
ans_nr  <- phylo_mle(dat)
ans_abc <- phylo_mle(dat, method = "ABC")

# Plotting the path
with(ans_nr, plot(
 - apply(hist, 1, fun, dat=dat),
 type = "l",
 xlab = "Step",
 ylab = "Log-Likelihood"
))


# Computing Estimating the parameters Using Priors for PSI 
mypriors <- function(params) {
    dbeta(params[1:2], 2, 10)
}
ans_nr_dbeta <- phylo_mle(dat, priors = mypriors)
ans_abc_dbeta <- phylo_mle(dat, priors = mypriors, method = "ABC")

# Plotting the path
oldpar <- par(no.readonly = TRUE)
par(mfrow = c(2, 2))

plot(ans_nr, main = "No priors L-BFGS-B")
plot(ans_abc, main = "No priors ABC")
plot(ans_nr_dbeta, main = "L-BFGS-B w/ Prior for Psi ~ beta(2,10)")
plot(ans_abc_dbeta, main = "ABC w/ Prior for Psi ~ beta(2,10)")

par(oldpar)


# Using the MCMC ------------------------------------------------------------

\dontrun{

set.seed(1233)
# Simulating a tree
tree <- sim_tree(200)$edges

# Simulating functions
dat <- sim_annotated_tree(
  tree = tree,
  psi  = c(.01, .03),
  mu   = c(.05, .02),
  Pi   = .5
)

# Running the MCMC
set.seed(1231)

ans_mcmc <- phylo_mcmc(
  rep(.1, 5), dat,
  control = list(nbatch = 2e5, burnin=1000, thin=200, scale=2e-2)
)
}

}
