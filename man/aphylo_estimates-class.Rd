% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation.r, R/predict.r
\name{aphylo_estimates-class}
\alias{aphylo_estimates-class}
\alias{aphylo_mle}
\alias{print.aphylo_estimates}
\alias{coef.aphylo_estimates}
\alias{vcov.aphylo_estimates}
\alias{plot.aphylo_estimates}
\alias{aphylo_mcmc}
\alias{predict.aphylo_estimates}
\alias{prediction_score}
\alias{print.aphylo_prediction_score}
\alias{plot.aphylo_prediction_score}
\title{Parameter estimation of Annotated Phylogenetic Trees}
\usage{
aphylo_mle(dat, method = "L-BFGS-B", priors = NULL, control = list(),
  params = c(rep(0.01, 4), 0.99, 0.99, 0.01), lower = 0, upper = 1,
  check.informative = TRUE)

\method{print}{aphylo_estimates}(x, ...)

\method{coef}{aphylo_estimates}(object, ...)

\method{vcov}{aphylo_estimates}(object, ...)

\method{plot}{aphylo_estimates}(x, ...)

aphylo_mcmc(dat, params = c(0.02, 0.02, 0.02, 0.02, 0.9, 0.9, 0.02),
  priors = function(p) c(stats::dbeta(p[-c(5:6)], 2, 38), stats::dbeta(p[5:6],
  38, 2)), control = list(), check.informative = TRUE)

\method{predict}{aphylo_estimates}(object, ...)

prediction_score(x, expected = NULL, alpha = mean(x$dat$tip.annotation ==
  1L, na.rm = TRUE), W = NULL, ...)

\method{print}{aphylo_prediction_score}(x, ...)

\method{plot}{aphylo_prediction_score}(x, y = NULL,
  main = "Predicted v/s\\nExpected Values",
  main.colorkey = "Probability of Functional Annotation",
  which.fun = seq_len(ncol(x$expected)), include.labels = NULL,
  labels.col = "black", ...)
}
\arguments{
\item{dat}{An object of class \code{new_aphylo} as returned by
\code{\link[=new_aphylo]{new_aphylo()}}.}

\item{method}{Character scalar. When \code{"ABC"}, uses Artificial Bee Colony
optimization algorithm, otherwise it uses a method in \code{\link[stats:optim]{stats::optim()}}.}

\item{priors}{A list of length 3 with functions named \code{psi}, \code{mu},
\code{Pi}}

\item{control}{A list with parameters for the optimization method (see
details).}

\item{params}{A vector of length 7 with initial parameters. In particular
\code{psi[1]}, \code{psi[2]}, \code{mu[1]}, \code{mu[2]}, \code{eta[1]}, \code{eta[2]} and \code{Pi}.}

\item{lower}{Numeric vector of length 5. Lower bounds, default to 0.0001.}

\item{upper}{Numeric vector of length 5. Upper bounds, default to 0.9999}

\item{check.informative}{Logical scalar. When \code{TRUE} (default) the algorithm
stops with an error when the annotations are uninformative (either 0s or 1s).}

\item{x}{An object of class \code{aphylo_estimates}.}

\item{...}{Further arguments passed to the method.}

\item{object}{An object of class \code{aphylo_estimates}.}

\item{expected}{Integer vector of length \eqn{n}. Expected values (either 0 or 1).}

\item{alpha}{Numeric scalar. Prior belief of the parameter of the bernoulli distribution
used to compute the random imputation score.}

\item{W}{A square matrix. Must have as many rows as genes in \code{expected}.}

\item{y}{Ignored.}

\item{main}{Passed to \code{title}.}

\item{main.colorkey}{Character scalar. Title of the colorkey (optional).}

\item{which.fun}{Integer vector. Which function to plot.}

\item{include.labels}{Logical scalar. When \code{TRUE}, draws nice labels
at each slice which by default are specified as the rownames of \code{x$expected}.
This is mostly useful when the number of predictions is small.}

\item{labels.col}{Character scalar. Color of the labels.}
}
\value{
A list of class \code{aphylo_estimates} with the following elements:
\item{par}{A numeric vector of length 5 with the solution.}
\item{hist}{A numeric matrix of size \code{counts*5} with the solution path (length 2 if used \code{optim}
as the intermediate steps are not available to the user).}
\item{ll}{A numeric scalar with the value of \code{fun(par, dat)}. The value of the log likelihood.}
\item{counts}{Integer scalar number of steps/batch performed.}
\item{convergence}{Integer scalar. Equal to 0 if \code{optim} converged. See \code{optim}.}
\item{message}{Character scalar. See \code{optim}.}
\item{fun}{A function (the objective function).}
\item{priors}{If specified, the function \code{priors} passed to the method.}
\item{dat}{The data \code{dat} provided to the function.}
\item{par0}{A numeric vector of length 5 with the initial parameters.}
\item{method}{Character scalar with the name of the method used.}
\item{varcovar}{A matrix of size 5*5. The estimated covariance matrix.}

In the case of \code{aphylo_mcmc}, \code{hist} is an object of class
\code{\link[coda:mcmc.list]{coda::mcmc.list()}}.

In the case of the \code{predict} method, a \code{P} column numeric matrix
with values between \eqn{[0,1]} (probabilities).
}
\description{
The optimization is done via \code{optim}.
}
\details{
\code{phylo_mcmc} is a wrapper of \code{\link[=MCMC]{MCMC()}}, so, instead of treating the
problem as a maximization problem, \code{phylo_mcmc} generates a \strong{Markov Chain}.
The default values of \code{control} are:

\tabular{ll}{
\code{nbatch} \tab Integer scalar. Number of mcmc steps. Default \code{2e3}. \cr
\code{scale} \tab Numeric scalar. Default \code{0.01}. \cr
\code{lb} \tab Numeric vector. Default \code{rep(1e-20, 5)}. \cr
\code{ub} \tab Numeric vector. Default \code{rep(1 - 1e-20, 5)}. \cr
}

In the case of \code{prediction_score}, \code{...} are passed to
\code{predict.aphylo_estimates}.

If \code{include.labels = NULL} and \code{ncol(x$expected) &gt; 40},
then \code{include.labels=FALSE} by default.
}
\examples{

# Using simulated data ------------------------------------------------------
set.seed(89)
dat <- sim_annotated_tree(100, P=2)

# Computing Estimating the parameters 
ans  <- aphylo_mle(dat)
ans

# Plotting the path
plot(ans)

# Computing Estimating the parameters Using Priors for all the parameters
mypriors <- function(params) {
    dbeta(params, c(2, 2, 2, 2, 1, 10, 2), rep(10, 7))
}

ans_dbeta <- aphylo_mle(dat, priors = mypriors)
ans_dbeta


# Using the MCMC ------------------------------------------------------------

\dontrun{

set.seed(1233)
# Simulating a tree
tree <- sim_tree(200)

# Simulating functions
dat <- sim_annotated_tree(
  tree = tree,
  psi  = c(.01, .03),
  mu   = c(.05, .02),
  Pi   = .5
)

# Running the MCMC
set.seed(1231)

ans_mcmc <- aphylo_mcmc(
  rep(.1, 7),  dat = dat,
  control = list(nbatch = 2e5, burnin=1000, thin=200, scale=2e-2)
)
}

# Example with prediction_score ---------------------------------------------
set.seed(1312)
ap  <- sim_annotated_tree(10, P = 1, Pi=.2, mu=c(.05,.02))
ans <- aphylo_mcmc(rep(.05, 7), dat = ap, control = list(nbatch=1e4, thin=100),
                   priors = function(x) dbeta(x, 1, 30))
                   
pr <- prediction_score(ans)
with(pr, cbind(Expected = expected, Predicted = predicted))
}
